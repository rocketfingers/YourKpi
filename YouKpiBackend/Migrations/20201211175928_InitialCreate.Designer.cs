// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouKpiBackend.DbContexts;

namespace YouKpiBackend.Migrations
{
    [DbContext(typeof(YoukpiContext))]
    [Migration("20201211175928_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.BusiessArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.ToTable("BusiessArea");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NIP")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Czesci", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GatPodstawowy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumerRysNorma")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Wymiary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Czesci");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.MozliweStatusyOferty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MozliweStatusyOferty");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.MozliwyDn", b =>
                {
                    b.Property<int>("Dn")
                        .HasColumnType("int")
                        .HasColumnName("DN");

                    b.HasKey("Dn");

                    b.ToTable("MozliwyDN");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.MozliwyOrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("MozliwyOrderType");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.MożliwaGrupaProcesu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.ToTable("MożliwaGrupaProcesu");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfertaTyp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.HasIndex("OfferId");

                    b.ToTable("OfertaTyp");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfertaTypOld", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OfferId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.ToTable("OfertaTyp_old");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfertyView", b =>
                {
                    b.Property<string>("AdditionalEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CenaPoRabacie")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("DataOferty")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataZamowienia")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataZapytania")
                        .HasColumnType("datetime");

                    b.Property<int?>("Dn")
                        .HasColumnType("int")
                        .HasColumnName("DN");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdentyfikatorProcesu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentyfikatorProjektu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Idoferty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDOferty");

                    b.Property<string>("Idwyrobu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDWyrobu");

                    b.Property<string>("Medium")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NazwaKlienta")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NazwaKroku")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NIP")
                        .IsFixedLength(true);

                    b.Property<int>("NumerKroku")
                        .HasColumnType("int");

                    b.Property<string>("Ofertujacy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PlanowanaDataKoncowa")
                        .HasColumnType("datetime");

                    b.Property<int?>("Pn")
                        .HasColumnType("int")
                        .HasColumnName("PN");

                    b.Property<string>("PricePerPiece")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TempMax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TempMin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypKonstrukcji")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TypPrzelotu")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TypWyrobu")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TypZlecienia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uszczelnienie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("W")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Wartsoc")
                        .HasColumnType("float");

                    b.Property<string>("Zamowienie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("OfertyView");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("OfferDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Offerrer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PlannedEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("ProjectsId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientsId");

                    b.HasIndex("Offerrer");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfferLines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AdditionalEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medium")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("W")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductId");

                    b.ToTable("OfferLines");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfferLinesOld", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AdditionalEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medium")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OfferId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OfferID");

                    b.Property<int?>("OfferId2")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("W")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_OfferLines");

                    b.ToTable("OfferLines_old");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfferOfferLinesConnection", b =>
                {
                    b.Property<int?>("OfferId")
                        .HasColumnType("int")
                        .HasColumnName("OfferID");

                    b.Property<int>("OfferLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasIndex("OfferId");

                    b.HasIndex("OfferLineId");

                    b.ToTable("OfferOfferLinesConnection");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CzasDostepuMin")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Salt")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrybPracy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.PracownikOfertaProcesy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OfferId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("ProcessID")
                        .IsFixedLength(true);

                    b.ToTable("PracownikOfertaProcesy");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.PracownikProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasIndex("PracownikId");

                    b.ToTable("PracownikProcess");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Process", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BusinessArea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KontoGłówne")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazwaGrupyProcesu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazwaProcesu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypZlecenia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('R')")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.ProduktCzesci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CzesciId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("IloscSztuk")
                        .HasColumnType("int");

                    b.Property<string>("ProduktyId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CzesciId");

                    b.HasIndex("ProduktyId");

                    b.ToTable("ProduktCzesci");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Produkty", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Ansi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ANSI");

                    b.Property<decimal?>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Dn")
                        .HasColumnType("int")
                        .HasColumnName("DN");

                    b.Property<string>("NumerRysNorma")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Pn")
                        .HasColumnType("int")
                        .HasColumnName("PN");

                    b.Property<string>("TypWyrobuId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Uszczelnienie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Waluta")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Wersja")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.ProduktyOld", b =>
                {
                    b.Property<string>("Ansi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ANSI");

                    b.Property<int>("Dn")
                        .HasColumnType("int")
                        .HasColumnName("DN");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Kvs")
                        .HasColumnType("int");

                    b.Property<string>("NumerRysNorma")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Pn")
                        .HasColumnType("int")
                        .HasColumnName("PN");

                    b.Property<string>("TypWyrobuId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Uszczelnienie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Waga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WagaJednostka")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'kg')");

                    b.Property<string>("Wersja")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("WymianyRmm")
                        .HasColumnType("int");

                    b.Property<int>("WymiarHmm")
                        .HasColumnType("int");

                    b.Property<int>("WymiaryDlmm")
                        .HasColumnType("int")
                        .HasColumnName("WymiaryDLmm");

                    b.ToTable("Produkty_old");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Projects", b =>
                {
                    b.Property<string>("Client")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ClientGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateOfferd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateTd")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DateTD");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Funel")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FunelStep")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("Location")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nomination")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Phase")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProductNrClient")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductNrInt")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductSubType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QafNr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RodzajProjektu")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("To")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Steps", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ProcessesId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProcessesID");

                    b.Property<bool>("Rwnolege")
                        .HasColumnType("bit");

                    b.Property<int>("Sekwencja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StepNum")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.TypWyrobu", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("IdgrupyWyrobu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDGrupyWyrobu");

                    b.Property<string>("TypKonstrukcji")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TypKuli")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("('pływajaca')");

                    b.Property<string>("TypPrzelotu")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("TypWyrobu");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.TypWyrobuIdDn", b =>
                {
                    b.Property<int?>("Dn")
                        .HasColumnType("int")
                        .HasColumnName("DN");

                    b.Property<int>("Kvs")
                        .HasColumnType("int");

                    b.Property<int>("TempMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((120))");

                    b.Property<int>("TempMin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-60))");

                    b.Property<string>("TypWyrobuId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Waga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WagaJednostka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WymianyRmm")
                        .HasColumnType("int");

                    b.Property<int>("WymiarHmm")
                        .HasColumnType("int");

                    b.Property<int>("WymiaryDlmm")
                        .HasColumnType("int")
                        .HasColumnName("WymiaryDLmm");

                    b.ToTable("TypWyrobuIdDn");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfertaTyp", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK__OfertaTyp__Offer__7A3223E8")
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Offer", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Client", "Clients")
                        .WithMany("Offer")
                        .HasForeignKey("ClientsId")
                        .HasConstraintName("FK__Offer__ClientsId__73852659")
                        .IsRequired();

                    b.HasOne("YouKpiBackend.ModelsEntity.Pracownik", "OfferrerNavigation")
                        .WithMany("Offer")
                        .HasForeignKey("Offerrer")
                        .HasConstraintName("FK__Offer__Offerrer__719CDDE7");

                    b.Navigation("Clients");

                    b.Navigation("OfferrerNavigation");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfferLines", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Offer", null)
                        .WithMany("OfferLines")
                        .HasForeignKey("OfferId");

                    b.HasOne("YouKpiBackend.ModelsEntity.Produkty", "Product")
                        .WithMany("OfferLines")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OfferLine__Produ__70A8B9AE")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.OfferOfferLinesConnection", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK__OfferOffe__Offer__7E02B4CC");

                    b.HasOne("YouKpiBackend.ModelsEntity.OfferLines", "OfferLine")
                        .WithMany()
                        .HasForeignKey("OfferLineId")
                        .HasConstraintName("FK__OfferOffe__Offer__01D345B0")
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("OfferLine");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.PracownikProcess", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikId")
                        .HasConstraintName("FK_PracownikProcess_Pracownik")
                        .IsRequired();

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.ProduktCzesci", b =>
                {
                    b.HasOne("YouKpiBackend.ModelsEntity.Czesci", "Czesci")
                        .WithMany("ProduktCzesci")
                        .HasForeignKey("CzesciId")
                        .HasConstraintName("ProduktCzesci_Czesci_FK")
                        .IsRequired();

                    b.HasOne("YouKpiBackend.ModelsEntity.Produkty", "Produkty")
                        .WithMany("ProduktCzesci")
                        .HasForeignKey("ProduktyId")
                        .HasConstraintName("ProduktCzesci_Produkty_FK")
                        .IsRequired();

                    b.Navigation("Czesci");

                    b.Navigation("Produkty");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Client", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Czesci", b =>
                {
                    b.Navigation("ProduktCzesci");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Offer", b =>
                {
                    b.Navigation("OfferLines");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Pracownik", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("YouKpiBackend.ModelsEntity.Produkty", b =>
                {
                    b.Navigation("OfferLines");

                    b.Navigation("ProduktCzesci");
                });
#pragma warning restore 612, 618
        }
    }
}
